<%doc>
This is the cascading style sheet.  The values are taken from the
$style hash.  This hash is usually defined in the
/themes/$theme/style component.
</%doc>
<%flags>
inherit=>undef
</%flags>

body {
    margin: 0px;
    padding: 0px;
    background-color: <% $style->{side_bar_bg_color} %>;
    color: <% $style->{page_color} %>;
}

b {
    color: <% $style->{bold_color} %>
}

h1 {
    font: <% $style->{header_font_face} %>;
    color: <% $style->{header_color} %>;
    font-size: 18pt;
}

h2 {
    font: <% $style->{header_font_face} %>;
    color: <% $style->{header_color} %>;
    margin-bottom: 0px;
    font-size: 14pt;
}

h3 {
    font: <% $style->{header_font_face} %>;
    color: <% $style->{header_color} %>;
    margin-bottom: 0px;
    font-size: 12pt;
}

h4 {
    font: <% $style->{header_font_face} %>;
    color: <% $style->{header_color} %>;
    margin-bottom: 0px;
    font-size: 12pt;
}

h5 {
    font: <% $style->{header_font_face} %>;
    color: <% $style->{header_color} %>;
    margin-bottom: 0px;
    font-size: 12pt;
}

h6 {
    font: <% $style->{header_font_face} %>;
    color: <% $style->{header_color} %>;
    margin-bottom: 0px;
    font-size: 12pt;
}

h1+h3 { margin-top: 10px; }

.toc-item { 
    font: <% $style->{header_font_face} %>;
    color: <% $style->{header_color} %>;
    font-size: 11pt;
    font-weight: 700;
}


dd+dt { margin-top: 10px; }

a {
    color: <% $style->{text_color} %>;
}

input, textarea, select, checkbox {
    font: <% $style->{font_face} %>;
    font-size: x-small;
    color: <% $style->{text_color} %>;
    background-color: <% $style->{page_color} %>;
}
p, td, li {
    font: <% $style->{font_face} %>;
    color: <% $style->{text_color} %>;
    background-color: <% $style->{page_color} %>;
}
.footer {
    font: <% $style->{font_face} %>;
    font-size: x-small;
    color: <% $style->{text_color} %>;
    background-color: <% $style->{side_bar_bg_color} %>;
}
.side_box {
    font: x-small <% $style->{font_face} %>;
    color: <% $style->{side_box_text_color} %>;
    background-color: <% $style->{side_box_bg_color} %>;
}
b.side_box {
    color: <% $style->{side_box_text_color} %>;
    background-color: <% $style->{side_box_bg_color} %>;
    font-weight: 700;
}

a.side_box {
    font: x-small <% $style->{font_face} %>;
    color: <% $style->{side_box_text_color} %>;
    background-color: <% $style->{side_box_bg_color} %>;
}

.side_box_button {
    font: <% $style->{font_face} %>;
    font-size: x-small;
    color: <% $style->{side_box_text_color} %>;
    background-color: <% $style->{side_box_bg_color} %>;
}
.side_box_outline_bg {
    background-color: <% $style->{side_box_outline_color} %>;
}
.side_box_title {
    color: <% $style->{side_box_header_color} %>;
    background-color: <% $style->{side_box_header_bg_color} %>;
    font-weight: 700;
}
.side_bar {
    background-color: <% $style->{side_bar_bg_color} %>;
}
.code_box {
    indent: 2em;
}
.code_box_outside {
    background-color: <% $style->{code_box_outline} %>;
}

.code_box_inside {
    background-color: <% $style->{code_box_background} %>;
}
<%init>
$r -> content_type("text/css");

$u -> note('theme', 'default');
# will need  to run through initializers, just like autohandler - just
# in case someone has a session - however, we don't pass any %ARGS

my $inits = $u -> query_components("initializers");
my $style;
try {
    my $theme = $u -> note('theme');
    my $style_init = $m -> fetch_comp("/themes/$theme/style");
    $style = $style_init -> call_method('init');
} otherwise {
    # do default style settings here...
};
</%init>
